C
0000                  zlib 2: header
1000                  compression method, deflate
00                    compression method, fastest
0                     fdict, no preset dictionary
11101                 checksum

D                     deflate 2: data start

0                     deflate 2: initial block containing deflate 1 start
00                    no compression
P                     padding
0110100000000000      initial block length (22 bytes)
1001011111111111      initial block length checksum

                      deflate 1 head
                      we want to copy the last byte of this as many times as we
                      can
C
0000100000011101
D
0 00
P
1000000000000000
0111111111111111
C
01000001
D
1011011100000011
1000000100000000
0000000000000000
0000000000000000
0000100111111111
1101011011000100
0010101010101010

                      the meat of deflate 2, all of the repetitions of the
                      previous byte
0                     not final block
01                    compressed with dynamic huffman codes
10111                 number of literal/length codes (286)
00000                 number of distance codes (1)
0111                  number of code length codes (18)
000                   code length for 16 (0)
000                   code length for 17 (0)
100                   code length for 18 (1) ***
000                   code length for 0  (0)
000                   code length for 8  (0)
000                   code length for 7  (0)
000                   code length for 9  (0)
000                   code length for 6  (0)
000                   code length for 10 (0)
000                   code length for 5  (0)
000                   code length for 11 (0)
000                   code length for 4  (0)
000                   code length for 12 (0)
000                   code length for 3  (0)
000                   code length for 13 (0)
000                   code length for 2  (0)
000                   code length for 14 (0)
100                   code length for 1  (1) ***

                      deflate: literal/length alphabet
                      note: our code lengths are:
                      1: 1
                      18: 1
                      so our alphabet is:
                      1: 0
                      18: 1

                      a bunch of zeros to get to code number 256 (end of block)
                      (code 0)
1                     138 zeros
1111111
                      (code 138)
1                     118 zeros
1101011
                      (code 256)
0                     code 256 has bit length 1
                      (code 257)
1                     28 zeros
1000100
                      (code 285)
0                     code 285 has bit length 1

                      deflate: end of literal/length alphabet

                      deflate: distance alphabet
0                     distance length 0 has bit length 1
                      deflate: end of distance alphabet

                      at this point, our literal/length alphabet has these bit
                      lengths:

                      256: 1
                      285: 1

                      and these encodings

                      256: 0
                      285: 1

                      and our distance alphabet has this bit length

                      0: 1

                      and this encoding:

                      0: 0

                      begin data:
                      each '10' is a block

101010                3 blocks, now we're byte aligned
10101010              each 10 is 258 repetitions of the previous byte
                      if we insert a bunch of 0x55 bytes at this position, we
                      can make this payload arbitrarily large
R

0                     deflate 2: end of compressed block

                      deflate 1 tail
1                     final block
00                    no compression
P                     padding
1010000000000000      final block length (5 bytes)
0101111111111111      final block length checksum


                      deflate 1 tail
D
0
C
0110001010000000      deflate 1 s2, for 1 MiB of stage 1 data
0011101000001101      deflate 1 s1, for 1 MiB of stage 1 data

C

0000001110110000      deflate 2 s2, for 1 MiB of stage 1 data
0110000010111001      deflate 2 s1, for 1 MiB of stage 1 data
